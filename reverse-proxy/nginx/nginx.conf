# Load ModSecurity module
load_module modules/ngx_http_modsecurity_module.so;

# User and process settings
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events configuration
events {
    worker_connections 4096; # Increased for high-performance systems
    multi_accept on;         # Accept multiple new connections at once
}

# HTTP configuration
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging settings
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;

    # ModSecurity settings
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;

    # Request limiting settings
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s; # Adjust based on expected API traffic

    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3; # Secure protocols only
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;

    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_min_length 1024;

    # Reject all HTTP traffic (forcefully close connections)
    server {
        listen 80 default_server;
        server_name _;
        return 444; # Drop all HTTP connections
    }

    # Main HTTPS server
    server {
        server_name localhost;
        listen 443 ssl http2;

        # SSL certificates
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 1.1.1.1 1.0.0.1 valid=300s; # Cloudflare DNS for resolution
        resolver_timeout 5s;

        # API Endpoint
        location /api/ {
            proxy_pass http://backend-api:${BACKEND_API_PORT}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            limit_req zone=api_limit burst=20 nodelay; # Burst for occasional spikes
            client_max_body_size 2m; # Limit request size
        }

        # Grafana Endpoint
        location /grafana/ {
            modsecurity off; # Turn off ModSecurity for Grafana
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_pass http://grafana:${GRAFANA_PORT}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Prometheus Endpoint
        location /prometheus/ {
            modsecurity off; # Turn off ModSecurity for Prometheus
            proxy_pass http://prometheus:${PROMETHEUS_PORT}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # cAdvisor Endpoint
        location /cadvisor/ {
            modsecurity off; # Turn off ModSecurity for cAdvisor
            proxy_pass http://cadvisor:${CADVISOR_PORT}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Static Files (if required)
        location /static/ {
            root /var/www/html/static;
        }

        # Default fallback for unrecognized requests
        location / {
            return 404; # Return 404 for invalid endpoints
        }
    }
}
